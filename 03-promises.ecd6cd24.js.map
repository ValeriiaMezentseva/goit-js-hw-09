{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAgCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,IAEtCJ,EAAQ,CAAEH,WAAUC,UACpBG,EAAO,CAAEJ,WAAUC,S,GACpBA,E,KApCQ,CACXO,OAAQC,SAASC,cAAc,UAC/BC,KAAMF,SAASC,cAAc,SAC7BT,MAAOQ,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,0BAG5BC,KAAKG,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBAMF,IALE,IAEiBC,EAAfF,EAAEG,cADJC,SAAYC,EAAKH,EAALhB,MAAOW,EAAIK,EAAJL,KAAMC,EAAMI,EAANJ,OAEvBQ,EAAeC,OAAOF,EAAMG,OAC5BC,EAAYF,OAAOV,EAAKW,OACnBE,EAAW,EAAGA,GAAYH,OAAOT,EAAOU,OAAQE,GAAY,EACtE1B,EAAc0B,EAAUJ,GACtBK,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjB2B,EAAA/B,GAASgC,OAAOC,QAAQ,uBAAwCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAEvE+B,OAAM,SAAAL,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAClB2B,EAAA/B,GAASgC,OAAOI,QAAQ,sBAAqCF,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAErEoB,GAAgBG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nconst refs = {\n  button: document.querySelector('button'),\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n}\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n    const {\n    elements: { delay, step, amount }\n  } = e.currentTarget; \n  let currentDelay = Number(delay.value);\n  let delayStep = Number(step.value);\n  for (let position = 1; position <= Number(amount.value); position += 1) {\n createPromise(position, currentDelay)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  currentDelay += delayStep;\n};\n};\n\nfunction createPromise(position, delay){\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n    if(shouldResolve) {\n      resolve({ position, delay });\n    } reject({ position, delay });\n  }, delay)\n  });\n};"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","button","document","querySelector","form","step","amount","addEventListener","e","preventDefault","_elements","currentTarget","elements","delay1","currentDelay","Number","value","delayStep","position1","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.ecd6cd24.js.map"}